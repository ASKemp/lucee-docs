{
  "pageType":"tag",
  "title":"cache",
  "name":"cache",
  "description":"Speeds up page rendering when dynamic content does not have to be retrieved each time a user accesses\n  the page. To accomplish this, cfcache creates temporary files that contain the static HTML returned from\n  a page. You can use cfcache for simple URLs and URLs that contain URL parameters.",
  "status":null,
  "appendix":false,
  "bodyContentType":"free",
  "attributeType":"fixed",
  "minimumAttributes":null,
  "handleException":null,
  "allowRemovingLiteral":null,
  "sourceClasses":{
    "tag":"lucee.runtime.tag.Cache",
    "ttt":null,
    "tdbt":null,
    "att":null,
    "tte":"lucee.transformer.cfml.evaluator.impl.Cache"
  },
  "script":{
    "type":"multiple",
    "runtimeExpressionValue":"true",
    "context":null
  },
  "attributes":[
    {
      "name":"action",
      "type":"string",
      "default":false,
      "defaultValue":"cache",
      "description":"\n\t\t\t- cache (default): server-side and client-side template caching.\n            - flush: refresh cached pages (template caching).\n            - clientcache: browser-side caching only. To cache a personalized page, use this option.\n            - servercache: server-side caching only. Not recommended.\n            - optimal: same as \"cache\".\n            - content: same as cache, but cache only the body of the tag, not the complete template (template caching).\n            - put: adds a key value pair to object cache (see function cachePut for more details)\n            - get: gets value matching given key from object cache (see function cacheGet for more details)\n            ",
      "aliases":[
        
      ],
      "values":[
        "cache",
        "flush",
        "clientcache",
        "servercache",
        "optimal",
        "content",
        "put",
        "get"
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"key",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"key to access cache",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"id",
      "type":"any",
      "default":false,
      "defaultValue":null,
      "description":"Id of the cached object",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"throwOnError",
      "type":"boolean",
      "default":false,
      "defaultValue":null,
      "description":"A Boolean value specifying whether t throw an error if the\nflush\naction encounters an error. Otherwise the action does not generate an error if it fails. If this attribute is\ntrue\nyou can handle the error in a\ncfcatch\nblock, for example, if a specified id value is invalid",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"name",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"name of return variable, valid with action=\"get\"",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"metadata",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"Name of the struct variable",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"value",
      "type":"any",
      "default":false,
      "defaultValue":null,
      "description":"For action=\"set\", object which needs to be stored",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"cacheName",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"definition of the cache used by name, when not set the \"default Object Cache\" defined in Lucee Administrator is used instead.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"username",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"When required for basic authentication, a valid username.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":"unimplemented",
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"password",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"When required for basic authentication, a valid password.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":"unimplemented",
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"protocol",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"Specifies the protocol used to create pages from cache. Either http:// or https://. The default\n\t\tis http://.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"timespan",
      "type":"timespan",
      "default":false,
      "defaultValue":null,
      "description":"The interval until the item is flushed from the cache.\nA decimal number of days, for example: \".25\", for one-fourth day (6 hours); \"1\", for one day; \"1.5\", for one and one half days\nA return value from the CreateTimeSpan function, for example, \"#CreateTimeSpan(0,6,0,0)#\".\nThe default action is to flush the item when it is idle for the time specified by the idleTime attribute, or cfcache action=\"flush\" executes.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"idletime",
      "type":"timespan",
      "default":false,
      "defaultValue":null,
      "description":"Flushes the cached item if it is not accessed for the specified time span:\nA decimal number of days, for example: \".25\", for one-fourth day (6 hours); \"1\", for one day; \"1.5\", for one and one half days\nA return value from the CreateTimeSpan function, for example, \"#CreateTimeSpan(0,6,0,0)#\".",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"directory",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"Absolute path of cache directory.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"cachedirectory",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"Absolute path of cache directory (alias for directory).",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"timeout",
      "type":"any",
      "default":false,
      "defaultValue":null,
      "description":"This attribute has been deprecated and is non-functional.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":"deprecated",
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"expireURL",
      "type":"string",
      "default":false,
      "defaultValue":null,
      "description":"A URL reference. Can include wildcards, for example: \"*/view.cfm?id=*\". Lucee flushes, from the cache, pages that match the specified URL or pattern.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    },
    {
      "name":"port",
      "type":"number",
      "default":false,
      "defaultValue":null,
      "description":"Port number of the web server from which the URL for the cached page is requested.\n\t\t\tIn the internal call from cfcache to cfhttp, Lucee resolves each URL variable in the page; this ensures that links in the page remain functional.",
      "aliases":[
        
      ],
      "values":[
        
      ],
      "status":null,
      "required":false,
      "noname":false,
      "scriptSupport":null,
      "runTimeExpressionValue":true
    }
  ],
  "examples":[
    
  ],
  "history":[
    
  ]
}